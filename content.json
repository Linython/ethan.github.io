{"meta":{"title":"Ethan's world","subtitle":"What I learned in those years","description":"","author":"Ethan","url":"https://linython.github.io/ethan.github.io","root":"/ethan.github.io/"},"pages":[{"title":"About","date":"2022-12-20T09:07:06.000Z","updated":"2022-12-23T09:15:02.015Z","comments":false,"path":"about/index.html","permalink":"https://linython.github.io/ethan.github.io/about/index.html","excerpt":"","text":"作物学研究生野生程序猿"},{"title":"","date":"2023-02-09T09:18:29.861Z","updated":"2023-02-09T09:18:29.861Z","comments":false,"path":"HTML/css/test0124.css","permalink":"https://linython.github.io/ethan.github.io/HTML/css/test0124.css","excerpt":"","text":"body { left: 50%; /*position: relative;*/ position: absolute; /*top: 50%;*/ transform: translate(-50%,0); } /*#all {*/ /* width: 1000px;*/ /* background-color: #99CCFF;*/ /*}*/ svg { border:1px solid; border-radius: 3px; } .input-data{ width: 750px; height: 180px; position: relative; } .input-data input { outline: none; } .input-data-text input{ width: 250px; height: 100%; border: none; border-bottom: 2px solid silver; font-size: 17px; text-align: center; } .input-data-text { float: left; width: 100%; } .input-data-text div{ float: left; } .input-data-num { float: left; width: 100%; } .input-data-num div{ float: left; height: 75px; } .input-data-num input{ width: 100px; height: 100%; border: none; border-bottom: 2px solid silver; font-size: 17px; text-align: center; } #xTitle:hover, #yTitle:hover, #x_min:hover, #x_max:hover, #y_min:hover, #y_max:hover { /*outline: none;*/ border-bottom: 2px solid #b0a4e3; background-color: #edd1d8; border-radius: 8px; } #select ,#clean{ width: 90px; height: 30px; border: none; border-radius: 3px; position: relative; padding: 4px 4px; background-color: #1976d2; color: #fff; box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.15), 0 1px 5px 0 rgba(0, 0, 0, 0.12); font-size: 18px; outline: 0; border: 0; cursor: pointer; overflow: hidden; transition: background-color .25s; } #select::after { content: ''; position: absolute; top: 0; left: 0; right: 0; bottom: 0; background-image: radial-gradient(circle, #44cef6 10%, transparent 10%); transform: scale(10); opacity: 0; transition: all .6s; } #select:active::after { transform: scale(0); opacity: .5; transition: 0s; } #select:hover{ background-color: sandybrown; color: white; } #clean:hover{ background-color: gray; color: white; } div { padding: 10px; } #btn button{ background-color: #99CCFF; border: 3px; border-radius: 5px; width: 200px; height: 30px; } ul { list-style-type: none; } .box { width: 750px; height: 300px; background-color: ghostwhite; outline: #a1afc9 solid 1px; border-radius: 5px; margin-bottom: 10px; left: 50%; position: relative; transform: translate(-50%, 0); } .box li { float: left; padding: 3px; } input.labelauty + label ::selection { background-color: rgba(255, 255, 255, 0); } input.labelauty + label ::-moz-selection { background-color: rgba(255, 255, 255, 0); } input.labelauty { display: none !important; } input.labelauty + label { display: table; font-size: 12px; padding: 10px; background-color: #efefef; color: #50616d; cursor: pointer; border: 3px; border-radius: 3px 3px 3px 3px; -moz-border-radius: 3px 3px 3px 3px; -webkit-border-radius: 3px 3px 3px 3px; transition: background-color 0.25s; -moz-transition: background-color 0.25s; -webkit-transition: background-color 0.25s; -o-transition: background-color 0.25s; -moz-user-select: none; -webkit-user-select: none; } input.labelauty + label > span.labelauty-unchecked, input.labelauty + label > span.labelauty-checked { display: inline-block; line-height: 16px; vertical-align: bottom; } input.labelauty + label > span.labelauty-unchecked-image, input.labelauty + label > span.labelauty-checked-image { display: inline-block; width: 16px; height: 16px; vertical-align: bottom; background-repeat: no-repeat; background-position: left center; transition: background-image 0.5s linear; -moz-transition: background-image 0.5s linear; -webkit-transition: background-image 0.5s linear; -o-transition: background-image 0.5s linear; } /* When there's a label, add a little margin to the left */ input.labelauty + label > span.labelauty-unchecked-image + span.labelauty-unchecked, input.labelauty + label > span.labelauty-checked-image + span.labelauty-checked { margin-left: 7px; } /* When not Checked */ input.labelauty:not(:checked):not([disabled]) + label:hover { background-color: #d9d9d9; color: #a7a7a7; } input.labelauty:not(:checked) + label > span.labelauty-checked-image { display: none; } input.labelauty:not(:checked) + label > span.labelauty-checked { display: none; } /* When Checked */ input.labelauty:checked + label { background-color: #177cb0; color: #ffffff; } input.labelauty:checked:not([disabled]) + label:hover { background-color: #cb3a56; } input.labelauty:checked + label > span.labelauty-unchecked-image { display: none; } input.labelauty:checked + label > span.labelauty-unchecked { display: none; } input.labelauty:checked + label > span.labelauty-checked { display: inline-block; } input.labelauty.no-label:checked + label > span.labelauty-checked { display: block; } /* When Disabled */ input.labelauty[disabled] + label { opacity: 0.5; } input.labelauty + label > span.labelauty-unchecked-image {background-image: url( ../Html_img/input-unchecked.png );} input.labelauty + label > span.labelauty-checked-image {background-image: url( ../Html_img/input-checked.png );}"},{"title":"","date":"2023-02-07T06:56:42.238Z","updated":"2013-11-18T02:11:58.000Z","comments":false,"path":"HTML/js/jquery-1.8.3.min.js","permalink":"https://linython.github.io/ethan.github.io/HTML/js/jquery-1.8.3.min.js","excerpt":"","text":"/*! jQuery v1.8.3 jquery.com | jquery.org/license */ (function(e,t){function _(e){var t=M[e]={};return v.each(e.split(y),function(e,n){t[n]=!0}),t}function H(e,n,r){if(r===t&&e.nodeType===1){var i=\"data-\"+n.replace(P,\"-$1\").toLowerCase();r=e.getAttribute(i);if(typeof r==\"string\"){try{r=r===\"true\"?!0:r===\"false\"?!1:r===\"null\"?null:+r+\"\"===r?+r:D.test(r)?v.parseJSON(r):r}catch(s){}v.data(e,n,r)}else r=t}return r}function B(e){var t;for(t in e){if(t===\"data\"&&v.isEmptyObject(e[t]))continue;if(t!==\"toJSON\")return!1}return!0}function et(){return!1}function tt(){return!0}function ut(e){return!e||!e.parentNode||e.parentNode.nodeType===11}function at(e,t){do e=e[t];while(e&&e.nodeType!==1);return e}function ft(e,t,n){t=t||0;if(v.isFunction(t))return v.grep(e,function(e,r){var i=!!t.call(e,r,e);return i===n});if(t.nodeType)return v.grep(e,function(e,r){return e===t===n});if(typeof t==\"string\"){var r=v.grep(e,function(e){return e.nodeType===1});if(it.test(t))return v.filter(t,r,!n);t=v.filter(t,r)}return v.grep(e,function(e,r){return v.inArray(e,t)>=0===n})}function lt(e){var t=ct.split(\"|\"),n=e.createDocumentFragment();if(n.createElement)while(t.length)n.createElement(t.pop());return n}function Lt(e,t){return e.getElementsByTagName(t)[0]||e.appendChild(e.ownerDocument.createElement(t))}function At(e,t){if(t.nodeType!==1||!v.hasData(e))return;var n,r,i,s=v._data(e),o=v._data(t,s),u=s.events;if(u){delete o.handle,o.events={};for(n in u)for(r=0,i=u[n].length;r"},{"title":"","date":"2023-02-08T08:06:36.350Z","updated":"2023-02-08T08:06:36.350Z","comments":false,"path":"HTML/js/jquery-labelauty.js","permalink":"https://linython.github.io/ethan.github.io/HTML/js/jquery-labelauty.js","excerpt":"","text":"/*! * LABELAUTY jQuery Plugin * * @file: jquery-labelauty.js * @author: Francisco Neves (@fntneves) * @site: www.francisconeves.com * @license: MIT License */ (function( $ ){ $.fn.labelauty = function( options ) { let settings = $.extend( { development: false, class: \"labelauty\", label: true, separator: \"|\", checked_label: \"Checked\", unchecked_label: \"Unchecked\", minimum_width: false, same_width: true }, options); return this.each(function() { let $object = $( this ); let use_labels = true; let labels; let labels_object; let input_id; if( $object.is( \":checkbox\" ) === false && $object.is( \":radio\" ) === false ) return this; $object.addClass( settings.class ); labels = $object.attr( \"data-labelauty\" ); use_labels = settings.label; if( use_labels === true ) { if( labels == null || labels.length === 0 ) { labels_object = new Array(); labels_object[0] = settings.unchecked_label; labels_object[1] = settings.checked_label; } else { labels_object = labels.split( settings.separator ); if( labels_object.length > 2 ) { use_labels = false; debug( settings.development, \"There's more than two labels. LABELAUTY will not use labels.\" ); } else { if( labels_object.length === 1 ) debug( settings.development, \"There's just one label. LABELAUTY will use this one for both cases.\" ); } } } // Start hiding ugly checkboxes $object.css({ display : \"none\" }); $object.removeAttr( \"data-labelauty\" ); input_id = $object.attr( \"id\" ); if( input_id == null ) { let input_id_number = 1 + Math.floor( Math.random() * 1024000 ); input_id = \"labelauty-\" + input_id_number; while( $( input_id ).length !== 0 ) { input_id_number++; input_id = \"labelauty-\" + input_id_number; debug( settings.development, \"Holy crap, between 1024 thousand numbers, one raised a conflict. Trying again.\" ); } $object.attr( \"id\", input_id ); } $object.after( create( input_id, labels_object, use_labels ) ); if( settings.minimum_width !== false ) $object.next( \"label[for=\" + input_id + \"]\" ).css({ \"min-width\": settings.minimum_width }); if( settings.same_width != false && settings.label == true ) { let label_object = $object.next( \"label[for=\" + input_id + \"]\" ); let unchecked_width = getRealWidth(label_object.find( \"span.labelauty-unchecked\" )); let checked_width = getRealWidth(label_object.find( \"span.labelauty-checked\" )); if( unchecked_width > checked_width ) label_object.find( \"span.labelauty-checked\" ).width( unchecked_width ); else label_object.find( \"span.labelauty-unchecked\" ).width( checked_width ); } }); }; function getRealWidth( element ) { let width = 0; let $target = element; let style = 'position: absolute !important; top: -1000 !important; '; $target = $target.clone().attr('style', style).appendTo('body'); width = $target.width(true); $target.remove(); return width; } function debug( debug, message ) { if( debug && window.console && window.console.log ) window.console.log( \"jQuery-LABELAUTY: \" + message ); }; function create( input_id, messages_object, label ) { let block; let unchecked_message; let checked_message; if( messages_object == null ) unchecked_message = checked_message = \"\"; else { unchecked_message = messages_object[0]; // If checked message is null, then put the same text of unchecked message if( messages_object[1] == null ) checked_message = unchecked_message; else checked_message = messages_object[1]; } if( label == true ) { block = '' + '' + '' + unchecked_message + '' + '' + '' + checked_message + '' + ''; } else { block = '' + '' + '' + ''; } return block; }; }( jQuery ));"}],"posts":[{"title":"DataSpell编写R","slug":"dataspell","date":"2023-01-03T16:30:24.000Z","updated":"2023-01-03T16:38:34.074Z","comments":true,"path":"2023/01/04/dataspell/","link":"","permalink":"https://linython.github.io/ethan.github.io/2023/01/04/dataspell/","excerpt":"","text":"DataSpell中使用R绘图时需要使用R 3.6.1版本。其他版本无法显示图片。 且在高版本中打开后会报错。 运行即可 1Sys.setlocale(category = &#x27;LC_ALL&#x27;, locale = &#x27;English_United States.1252&#x27;) 运行后结果","categories":[{"name":"Data analysis","slug":"Data-analysis","permalink":"https://linython.github.io/ethan.github.io/categories/Data-analysis/"}],"tags":[{"name":"编程","slug":"编程","permalink":"https://linython.github.io/ethan.github.io/tags/%E7%BC%96%E7%A8%8B/"}]},{"title":"Cookbook","slug":"diet","date":"2022-12-22T13:13:50.000Z","updated":"2023-01-30T15:16:50.127Z","comments":true,"path":"2022/12/22/diet/","link":"","permalink":"https://linython.github.io/ethan.github.io/2022/12/22/diet/","excerpt":"","text":"菜谱1. 虾仁玉米配料食材：虾仁、玉米、青豆调料：盐、胡椒粉、糖、淀粉 做法 青豆，玉米焯水，备用 虾仁加入盐、胡椒粉、白糖、淀粉封保鲜膜腌制10 min。 锅中加入食用油烧热，炒虾仁至变色后加入玉米粒、青豆一起炒。 2. 青豆牛肉配料食材：牛肉、青豆调料：盐、胡椒粉、生抽、淀粉、红辣椒 做法 青豆焯水 牛肉切片加入生抽、盐、淀粉、胡椒粉腌制10 min。 热油将蒜爆香，加入牛肉中火翻炒至变色，加入青豆、红辣椒继续翻炒。 3. 土豆鸡肉（牛肉）咖喱配料食材：土豆、胡萝卜、洋葱、鸡肉调料：盐、蒜、红菜椒 做法 将土豆、胡萝卜、洋葱切块备用。 鸡肉切块煮熟备用。 蒜爆香，加入土豆、胡萝卜、洋葱翻炒，加水，加入咖喱后煮至浓稠即可。 4. 炸猪排配料食材：猪里脊、面包糠、鸡蛋、淀粉调料：盐、黑胡椒 做法 猪肉提前浸泡1h。 刀背捶打后加入生抽、黑胡椒腌制20 min，抹上玉米淀粉，裹上蛋液和面包糠。 入油锅炸至颜色金黄，捞出沥干油。 炸完全部后再复炸。 5. 酱牛肉配料食材：牛肉调料：盐、生抽、老抽、黄酒、冰糖、葱姜蒜、花椒、香叶、干辣椒、柠檬、八角 做法 牛肉清水浸泡1h 牛肉加入生抽、少量老抽、葱段、姜片、柠檬汁腌制1h。 将2倒入高压锅，加入清水没过牛肉，放入花椒、八角、香叶。 加入生抽、老抽、豆瓣酱（选）煮30min。 凉一下后用保鲜膜包裹分入冷藏3h。 6. 小院豆腐配料食材：老豆腐（一块，10×10×3cm）调料：生抽、老抽、黄酒、葱姜蒜、花椒、香叶、干辣椒、八角、桂皮 做法 油约100ml，烧热. 加入姜片（3-5片）、大油、鸡油、葱段（4×5cm）、八角（6-8个）稍微烹一分左右，加入生抽、黄酒、水（鸡汤，高汤）、老抽（少量调色）、一勺糖、胡椒粉、放入豆腐（用手掰成块），中小火50min左右。 7. 手撕鸡肉配料食材：鸡腿肉（首选）或鸡胸肉调料：姜蒜、小米椒、小葱、料酒、柠檬、生抽、白糖、盐、生抽、陈醋 做法 鸡腿肉凉水（更好的去处肉里的血水，热水会使表面的肉收缩而导致血水出不去）下锅，加入姜片、葱白、花椒、料酒煮熟。过凉水、撕成丝备用。 小米椒、蒜末切好放在鸡肉上面，放几片柠檬。 调汁：生抽和陈醋大概2：1（根据自己口味调整），加0.5比例的白糖，搅拌均匀后倒入鸡肉中搅拌，撒上葱花。 根据味道加入一些盐调味。 8. 宫保鸡丁配料食材：鸡腿肉（鸡胸肉）、胡萝卜、黄瓜、花生（卖的熟花生或者自己炒花生）调料：生抽、老抽、料酒、玉米淀粉、白糖、陈醋、孜然粉、葱、姜、蒜、花椒、干辣椒 做法 腌制鸡肉：鸡肉切丁，加入生抽、料酒、淀粉、姜丝抓匀腌制20min，腌制时间不固定，有时间多腌会。孜然粉根据需要加一点。 胡萝卜、黄瓜切丁备用 胡萝卜可以先用水煮下方便炒。（选做） 调汁：生抽、老抽、白糖、陈醋、淀粉=1：1：4：4：2，搅匀。老抽可以少，不能多，放多了会颜色深，也会咸。 热锅倒油，加入干辣椒炒至颜色变深、倒入鸡肉炒至变白，加入蒜片，葱段、花椒翻炒七八下，加入胡萝卜、黄瓜翻炒，倒入调好的汁，炒至汁水差不多快干，加入花生米翻炒几下就可以出锅。 9. 番茄鸡蛋配料食材：番茄（1个）、鸡蛋（2个）调料：蒜、小葱、盐 做法 番茄去皮（水煮、烫、烤都行）切碎。 鸡蛋打到碗里加一点点盐，加入凉水（10毫升左右），打散。 热锅倒油（可以稍多点，炒番茄的时候不用重新热油），倒入鸡蛋炒至刚熟就出锅，久了鸡蛋会老。 这时锅中剩的还有油，放入蒜末炒出蒜香，加入番茄翻炒出汤汁（想用汁拌饭可以加些水），倒入鸡蛋翻炒十几下就行。（我平时炒的时候不放盐，就打鸡蛋时放一点点，主要靠番茄本身的味道调味。出锅前觉得味道淡就放一些盐调味。） 出锅，撒上葱花。 10. 牛奶麻辣烫配料食材：丸子、千张、西兰花、火腿、粉丝、油麦菜、牛奶、猪肉调料：火锅料、豆瓣酱、葱 做法 丸子、千张、西兰花、猪肉煮熟后备用。粉丝用热水浸泡。 油热后加入葱爆香后加入火锅料和豆瓣酱翻炒，加水煮沸（水量依食材量而定）。过滤后倒回锅中，加入牛奶（水：牛奶约为2：1）。 待汤汁沸腾时加入食材。粉丝和油麦菜入锅后稍煮即可起锅。","categories":[{"name":"Find happy","slug":"Find-happy","permalink":"https://linython.github.io/ethan.github.io/categories/Find-happy/"}],"tags":[{"name":"Cook","slug":"Cook","permalink":"https://linython.github.io/ethan.github.io/tags/Cook/"}]},{"title":"Single_cell tools","slug":"Singal-cell","date":"2022-12-21T06:27:52.000Z","updated":"2023-02-09T09:30:02.312Z","comments":true,"path":"2022/12/21/Singal-cell/","link":"","permalink":"https://linython.github.io/ethan.github.io/2022/12/21/Singal-cell/","excerpt":"","text":"Single-cell RNA-seq data analysisSRA Toolkit安装Download SRA Toolkit (下载地址)：Download : Software : Sequence Read Archive : NCBI/NLM/NIH Linux systemEnter the following code in the terminal: 123echo &#x27;export PATH=$PATH:/home/Your roads/sratoolkit.3.0.0-ubuntu64/bin &#x27; &gt;&gt; ~/.bashrc # Set environment variables(设置环境变量)source ~/.bashrc #Execute for the code entered earlier to take affect(执行，以使前面代码生效)vdb-config --interactive # Open the setting page and press &quot;x&quot; to exit(打开设置界面，按“x”退出即可) Windows system Download the package and install. Add environment variables. Press ‘Windows + R’ 2.1 Input “sysdm.cpl”, 2.2 Environment variables, 2.3 System variables——Path, 2.4 Edit, 2.5 New, 2.6 Enter the bin folder path. Verify that the installation was successful. Download SRA data from NCBIModify the file download location Get .txt files of multiple SRR data. Enter the following code in the terminal: 12prefetch SRR-number # Single dataprefetch --option-file filename.txt # Multiple data 将下载的SRA文件转为fastq格式 确定下载的数据是单端测序还是双端 以GSE84465(双端测序)和GSE197163(单端测序)为例，在样本信息页面下方找到“SRA Run Selector”，打开查看样本的详细信息。 使用fastq-dump命令进行SRA数据转fastq格式 1234567fastq-dump --gizp -O ./ --split-3 SRR18096986.sra# 注释--gzip 以压缩包的形式保存文件-O ./ 转化后文件保存位置--split-3 用于将双端测序文件拆分，单端测序文件可省略。 Fastqc质控Install FastQC（https://www.bioinformatics.babraham.ac.uk/projects/download.html#fastqc）Select the installation package that matches your system. windows下运行“run_fastqc.bat” 运行效果 CellRanger获取矩阵。","categories":[{"name":"Data analysis","slug":"Data-analysis","permalink":"https://linython.github.io/ethan.github.io/categories/Data-analysis/"}],"tags":[{"name":"Single cell","slug":"Single-cell","permalink":"https://linython.github.io/ethan.github.io/tags/Single-cell/"}]},{"title":"English words form the article","slug":"Home","date":"2022-12-13T15:28:29.000Z","updated":"2022-12-23T09:33:05.326Z","comments":true,"path":"2022/12/13/Home/","link":"","permalink":"https://linython.github.io/ethan.github.io/2022/12/13/Home/","excerpt":"","text":"Recorded wordsFilm mulching affects root growth and function in dryland maize-soybean intercroppingReference url：https://www.sciencedirect.com/science/article/pii/S0378429021001866 indicatev. 指示；表明；显示；指出","categories":[{"name":"English","slug":"English","permalink":"https://linython.github.io/ethan.github.io/categories/English/"}],"tags":[{"name":"English","slug":"English","permalink":"https://linython.github.io/ethan.github.io/tags/English/"}]}],"categories":[{"name":"Data analysis","slug":"Data-analysis","permalink":"https://linython.github.io/ethan.github.io/categories/Data-analysis/"},{"name":"Find happy","slug":"Find-happy","permalink":"https://linython.github.io/ethan.github.io/categories/Find-happy/"},{"name":"English","slug":"English","permalink":"https://linython.github.io/ethan.github.io/categories/English/"}],"tags":[{"name":"编程","slug":"编程","permalink":"https://linython.github.io/ethan.github.io/tags/%E7%BC%96%E7%A8%8B/"},{"name":"Cook","slug":"Cook","permalink":"https://linython.github.io/ethan.github.io/tags/Cook/"},{"name":"Single cell","slug":"Single-cell","permalink":"https://linython.github.io/ethan.github.io/tags/Single-cell/"},{"name":"English","slug":"English","permalink":"https://linython.github.io/ethan.github.io/tags/English/"}]}